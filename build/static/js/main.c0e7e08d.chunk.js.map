{"version":3,"sources":["config.js","Category.js","Journal.js","App.js","reportWebVitals.js","index.js"],"names":["config","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseUrl","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","firebase","apps","length","initializeApp","firestore","categoryRef","collection","journalRef","Category","useState","categoryState","setCategoryState","useForm","register","handleSubmit","showForm","setShowForm","editMode","setEditMode","id","createdAt","Date","description","name","tempData","setTempData","query","orderBy","limitToLast","useCollectionData","idField","data","journalQuery","journalDatas","console","log","useEffect","mappedRowData","map","queryData","index","CategoryTableRow","list","onDeleteClicked","onItemDeleteListener","onEditClick","handleEditClick","onSubmit","e","a","preparedData","JSON","stringify","forEach","x","category","temp","doc","set","then","catch","error","alert","add","handleCloseForm","journals","window","confirm","temp2","delete","seconds","style","Container","Row","Col","Button","variant","onClick","Table","stickyheader","aria-label","Modal","show","onHide","aria-labelledby","centered","type","placeholder","ref","required","defaultValue","format","Header","closeButton","Title","Body","htmlFor","Footer","props","Journal","moneyRef","categoryQuery","categories","categoryOption","setCategoryOption","setCategory","records","setRecords","total","setTotal","amount","tempCategories","push","t","r","d","i","JournalRow","onDeleteClick","handleDeleteClick","parseFloat","toDate","options","getOptionLabel","getOptionValue","onChange","obj","filter","striped","hover","colSpan","value","c","TextField","label","inputRef","step","min","onModalFormSubmit","toString","Home","App","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0e7e08d.chunk.js","sourcesContent":["const config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseUrl: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  }\r\n  \r\n  export default config;","import React from 'react';\r\nimport { useState, useEffect } from 'react'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\r\nimport { FormText, Table, Modal, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\"\r\nimport config from './config';\r\nimport { format } from 'date-fns'\r\nimport { BsPlus, BsTrash, BsPencil } from \"react-icons/bs\"\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nif (firebase.apps.length === 0) {\r\n    firebase.initializeApp(config);\r\n}\r\n\r\nconst firestore = firebase.firestore()\r\nconst categoryRef = firestore.collection('category')\r\nconst journalRef = firestore.collection('money')\r\n\r\nexport default function Category() {\r\n    const [categoryState, setCategoryState] = useState([])\r\n\r\n    const { register, handleSubmit } = useForm()\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [tempData, setTempData] = useState({\r\n        id: null,\r\n        createdAt: new Date(),\r\n        description: '',\r\n        name: ''\r\n    })\r\n\r\n    const query = categoryRef.orderBy('createdAt', 'asc').limitToLast(100)\r\n    const [data] = useCollectionData(query, { idField: 'id' })\r\n\r\n    const journalQuery = journalRef.orderBy('createdAt', 'asc')\r\n    var [isDeleted, setIsDeleted] = useState(false);\r\n    const [journalDatas] = useCollectionData(journalQuery, { idField: 'id' })\r\n\r\n    console.log(journalDatas);\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            let mappedRowData = data.map((queryData, index) => {\r\n                console.log(journalDatas);\r\n                return (\r\n                    <CategoryTableRow\r\n                        data={queryData}\r\n                        key={data[index].id}\r\n                        id={data[index].id}\r\n                        list={data[index]}\r\n                        onDeleteClicked={onItemDeleteListener}\r\n                        onEditClick={handleEditClick}\r\n                    />\r\n                )\r\n            })\r\n            setCategoryState(mappedRowData)\r\n        }\r\n    }, [data, journalDatas])\r\n\r\n    const onSubmit = async (data, e) => {\r\n        let preparedData = {\r\n            description: data.description,\r\n            name: data.name,\r\n            createdAt: new Date()\r\n        }\r\n        if (isDeleted) {\r\n        }\r\n\r\n        if (editMode) {\r\n            console.log('sss', JSON.stringify(journalDatas))\r\n            console.log(data.id);\r\n\r\n            if (journalDatas) {\r\n                console.log('what?');\r\n                console.log('id', data.id);\r\n\r\n                journalDatas.forEach(async (x) => {\r\n                    console.log('cate', x.category.id)\r\n                    if (x.category.id === data.id) {\r\n                        const temp = x;\r\n                        console.log('ss', temp);\r\n                        temp.category.name = data.name;\r\n                        await journalRef.doc(x.id)\r\n                            .set(temp)\r\n                            .then(() => console.log(\"moneyRef has been set\"))\r\n                            .catch((error) => {\r\n                                console.error(\"Error: \", error);\r\n                                alert(error)\r\n                            });\r\n                    }\r\n                })\r\n            }\r\n\r\n            await categoryRef.doc(data.id)\r\n                .set(preparedData)\r\n                .then(() => console.log(\"moneyRef has been set\"))\r\n                .catch((error) => {\r\n                    console.error(\"Error: \", error);\r\n                    alert(error)\r\n                });\r\n        } else {\r\n            await categoryRef\r\n                .add(preparedData)\r\n                .then(() => console.log(\"New record has been added.\"))\r\n                .catch((error) => {\r\n                    console.error(\"Errror:\", error)\r\n                    alert(error)\r\n                })\r\n        }\r\n        handleCloseForm()\r\n    }\r\n\r\n    const onItemDeleteListener = async (id, list, journals) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            if (journalDatas) {\r\n                journalDatas.forEach(async (x) => {\r\n                    console.log('data id', list.id);\r\n                    console.log('cate id', x.category.id)\r\n                    if (x.category.id === list.id) {\r\n                        const temp2 = x;\r\n                        console.log('journalRef', journalRef);\r\n                        temp2.category.id = \"unknown\";\r\n                        temp2.category.name = \"Uncategorised\";\r\n                        await journalRef.doc(x.id)\r\n                            .set(temp2)\r\n                            .then(() => console.log(\"moneyRef has been set\"))\r\n                            .catch((error) => {\r\n                                console.error(\"Error: \", error);\r\n                                alert(error)\r\n                            });\r\n                    }\r\n                })\r\n            }\r\n            await categoryRef.doc(id).delete()\r\n        }\r\n    }\r\n\r\n    const handleEditClick = (id, list) => {\r\n        let preparedData = {\r\n            id: id,\r\n            description: list.description,\r\n            name: list.name,\r\n            createdAt: new Date(list.createdAt.seconds)\r\n        }\r\n        console.log(\"handleEditClick\", preparedData)\r\n        setTempData(preparedData)\r\n        setEditMode(true)\r\n        setShowForm(true)\r\n    }\r\n\r\n    const handleshowForm = () => setShowForm(true)\r\n    const handleCloseForm = () => { setShowForm(false) }\r\n\r\n    return (\r\n        <div style={{ \"marginTop\": 1 + '%' }}>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h1 >Category Management</h1>\r\n                        <Button variant=\"outline-dark\" onClick={handleshowForm}>\r\n                            <BsPlus /> Add\r\n                </Button>\r\n                    </Col>\r\n                </Row>\r\n                <div style={{ \"marginTop\": 3 + '%' }}>\r\n                    <Table stickyheader=\"true\" aria-label=\"sticky table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {categoryState}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n\r\n                <Modal\r\n                    show={showForm} onHide={handleCloseForm}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <input\r\n                            type=\"hidden\"\r\n                            placeholder=\"createdAt\"\r\n                            ref={register({ required: false })}\r\n                            name=\"id\"\r\n                            id=\"id\"\r\n                            defaultValue={format(tempData.createdAt, \"yyyy-MM-dd\")}\r\n                        />\r\n                        <input\r\n                            type=\"hidden\"\r\n                            placeholder=\"ID\"\r\n                            ref={register({ required: false })}\r\n                            name=\"id\"\r\n                            id=\"id\"\r\n                            defaultValue={tempData.id}\r\n                        />\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>\r\n                                {editMode ? \"Edit Category\" : \"Add New Category\"}\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Row>\r\n                                <Col>\r\n                                    <label htmlFor=\"name\">Name</label>\r\n                                </Col>\r\n                                <Col>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Name\"\r\n                                        ref={register({ required: true })}\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        defaultValue={tempData.name}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <label htmlFor=\"name\">Description</label>\r\n                                </Col>\r\n                                <Col>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Description\"\r\n                                        ref={register({ required: true })}\r\n                                        name=\"description\"\r\n                                        id=\"description\"\r\n                                        defaultValue={tempData.description}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleCloseForm}>\r\n                                Close\r\n                        </Button>\r\n                            <Button variant={editMode ? \"success\" : \"primary\"} type=\"submit\">\r\n                                {editMode ? \"Save Category\" : \"Add Category\"}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </form>\r\n                </Modal>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CategoryTableRow(props) {\r\n    let data = props.data\r\n    let id = props.id\r\n    let list = props.list\r\n    console.log(`props ${data}`)\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <BsTrash onClick={() => props.onDeleteClicked(id, list)} />\r\n                <BsPencil onClick={() => props.onEditClick(id, list)} />\r\n            </td>\r\n            <td>{data.name}</td>\r\n            <td>{data.description}</td>\r\n        </tr>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Select from 'react-select'\r\nimport { format } from 'date-fns'\r\nimport { BsPlus, BsTrash, BsPencil } from \"react-icons/bs\";\r\nimport { useForm } from \"react-hook-form\"\r\nimport config from './config';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nif (firebase.apps.length === 0) {\r\n    firebase.initializeApp(config);\r\n}\r\nconst firestore = firebase.firestore()\r\n\r\nexport default function Journal() {\r\n    const moneyRef = firestore.collection('money');\r\n    const categoryRef = firestore.collection('category');\r\n    const query = moneyRef.orderBy('createdAt', 'asc').limitToLast(100);\r\n\r\n    const categoryQuery = categoryRef.orderBy('createdAt', 'asc').limitToLast(100);\r\n    const [data] = useCollectionData(query, { idField: 'id' });\r\n    const [categories] = useCollectionData(categoryQuery, { idField: 'id' });\r\n\r\n    const [categoryOption, setCategoryOption] = useState([]);\r\n    const [category, setCategory] = useState()\r\n    const { register, handleSubmit } = useForm()\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [records, setRecords] = useState([])\r\n    const [total, setTotal] = useState(0)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [tempData, setTempData] = useState({\r\n        id: null,\r\n        createdAt: new Date(),\r\n        description: '',\r\n        amount: 0,\r\n        category: categoryOption[0]\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (categories) { // Guard condition\r\n            const tempCategories = [{ id: 0, name: '-- All -- ' }];\r\n            categories.forEach((x) => {\r\n                tempCategories.push({ id: x.id, name: x.name });\r\n            })\r\n            setCategoryOption(tempCategories);\r\n        }\r\n    }, [categories])\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            let t = 0\r\n            let r = data.map((d, i) => {\r\n                t += d.amount\r\n                return (\r\n                    <JournalRow\r\n                        data={d}\r\n                        i={i}\r\n                        key={i}\r\n                        onDeleteClick={handleDeleteClick}\r\n                        onEditClick={handleEditClick}\r\n                    />\r\n                )\r\n            })\r\n\r\n            setRecords(r)\r\n            setTotal(t)\r\n        }\r\n    }, [data])\r\n\r\n    const handleCategoryFilterChange = (obj) => {\r\n        if (data) {\r\n            let t = 0\r\n            let filteredData = data.filter(d => obj.id == 0 || d.category.id == obj.id)\r\n            let r = filteredData.map((d, i) => {\r\n                t += d.amount\r\n                return (\r\n                    <JournalRow data={d} i={i} onDeleteClick={handleDeleteClick}\r\n                        onEditClick={handleEditClick} />\r\n                )\r\n            })\r\n\r\n            setRecords(r)\r\n            setTotal(t)\r\n        }\r\n    }\r\n\r\n    const handleshowForm = () => setShowForm(true)\r\n\r\n    const handleCloseForm = () => {\r\n        setTempData({\r\n            id: null,\r\n            createdAt: new Date(),\r\n            description: '',\r\n            amount: 0,\r\n            category: categoryOption[0]\r\n        })\r\n        setEditMode(false)\r\n        setCategory({})\r\n        setShowForm(false)\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n        let preparedData = {\r\n            description: data.description,\r\n            amount: parseFloat(data.amount),\r\n            createdAt: new Date(data.createdAt),\r\n            category: category\r\n        }\r\n        if (editMode) {\r\n            await moneyRef.doc(data.id)\r\n                .set(preparedData)\r\n                .then(() => console.log(\"moneyRef has been set\"))\r\n                .catch((error) => {\r\n                    console.error(\"Error: \", error);\r\n                    alert(error)\r\n                });\r\n        } else {\r\n            await moneyRef\r\n                .add(preparedData)\r\n                .then(() => console.log(\"New record has been added.\"))\r\n                .catch((error) => {\r\n                    console.error(\"Errror:\", error)\r\n                    alert(error)\r\n                })\r\n        }\r\n        handleCloseForm()\r\n    }\r\n\r\n    const handleCategoryChange = (obj) => {\r\n        setCategory(obj)\r\n    }\r\n\r\n    const handleDeleteClick = (id) => {\r\n        if (window.confirm(\"Are you sure to delete this record?\"))\r\n            moneyRef.doc(id).delete()\r\n    }\r\n\r\n    const handleEditClick = (data) => {\r\n        let preparedData = {\r\n            id: data.id,\r\n            description: data.description,\r\n            amount: parseFloat(data.amount),\r\n            createdAt: data.createdAt.toDate(),\r\n            category: category\r\n        }\r\n        setEditMode(true)\r\n        setTempData(preparedData)\r\n        setCategory(data.category)\r\n        setShowForm(true)\r\n    }\r\n\r\n    return (\r\n        <div style={{\"marginTop\": 1 + '%'}}>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h1>Journal</h1>\r\n                        <Button variant=\"outline-dark\" onClick={handleshowForm}>\r\n                            <BsPlus /> Add\r\n                    </Button>\r\n                    </Col>\r\n                    <Col>\r\n                        Category:\r\n          <Select\r\n                            options={categoryOption}\r\n                            getOptionLabel={x => x.name}\r\n                            getOptionValue={x => x.id}\r\n                            onChange={handleCategoryFilterChange}\r\n                        />\r\n                    </Col>\r\n\r\n                </Row>\r\n                <div style={{\"marginTop\": 3 + '%'}}>\r\n                <Table striped hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Date</th>\r\n                            <th>Description</th>\r\n                            <th>Category</th>\r\n                            <th>Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {records}\r\n                    </tbody>\r\n                    <tfooter>\r\n                        <td colSpan={5}>\r\n                            <h3>Total: {total}</h3>\r\n                        </td>\r\n                    </tfooter>\r\n                </Table>\r\n                </div>\r\n\r\n                <Modal\r\n                    show={showForm} onHide={handleCloseForm}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <input\r\n                            type=\"hidden\"\r\n                            placeholder=\"ID\"\r\n                            ref={register({ required: false })}\r\n                            name=\"id\"\r\n                            id=\"id\"\r\n                            defaultValue={tempData.id}\r\n                        />\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>\r\n                                {editMode ? \"Edit Record\" : \"Add New Record\"}\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Row>\r\n                                <Col>\r\n                                    <label htmlFor=\"createdAt\">Date</label>\r\n                                </Col>\r\n                                <Col>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        placeholder=\"Date\"\r\n                                        ref={register({ required: true })}\r\n                                        name=\"createdAt\"\r\n                                        id=\"createdAt\"\r\n                                        defaultValue={format(tempData.createdAt, \"yyyy-MM-dd\")}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <label htmlFor=\"category\">Category</label>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select\r\n                                        id=\"category\"\r\n                                        name=\"category\"\r\n                                        value={category}\r\n                                        placeholder=\"Category\"\r\n                                        options={categoryOption.filter(c => c.id != 0)}\r\n                                        onChange={handleCategoryChange}\r\n                                        getOptionLabel={x => x.name}\r\n                                        getOptionValue={x => x.id}\r\n                                        ref={register}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <label htmlFor=\"description\">Description</label>\r\n                                </Col>\r\n                                <Col>\r\n                                    {/* <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Description\"\r\n                                        ref={register({ required: true })}\r\n                                        name=\"description\"\r\n                                        id=\"description\"\r\n                                        defaultValue={tempData.description}\r\n                                    /> */}\r\n                                    <TextField id=\"standard-basic\" label=\"Standard\" inputRef={register({ required: true })} name=\"description\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <label htmlFor=\"amount\">Amount</label>\r\n                                </Col>\r\n                                <Col>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        step=\"any\"\r\n                                        min=\"0\"\r\n                                        placeholder=\"Amount\"\r\n                                        ref={register({ required: true })}\r\n                                        name=\"amount\"\r\n                                        id=\"amount\"\r\n                                        defaultValue={tempData.amount}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleCloseForm}>\r\n                                Close\r\n                        </Button>\r\n                            <Button onClick={onModalFormSubmit(editMode, handleSubmit, onSubmit)} variant={editMode ? \"success\" : \"primary\"} type=\"submit\">\r\n                                {editMode ? \"Save Record\" : \"Add Record\"}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </form>\r\n                </Modal>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction onModalFormSubmit(editMode, handleSubmit, onSubmit) {\r\n    console.log(\"modal click\", \"modal clicked\")\r\n    console.log(editMode.toString(), editMode.toString())\r\n    handleSubmit(onSubmit)\r\n}\r\n\r\nfunction JournalRow(props) {\r\n    let d = props.data\r\n    let i = props.i\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <BsTrash onClick={() => props.onDeleteClick(d.id)} />\r\n                <BsPencil onClick={() => props.onEditClick(d)} />\r\n            </td>\r\n            <td>{format(d.createdAt.toDate(), \"yyyy-MM-dd\")}</td>\r\n            <td>{d.description}</td>\r\n            <td>{d.category.name}</td>\r\n            <td>{d.amount}</td>\r\n        </tr>\r\n    )\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Container,\r\n  Navbar, Nav, NavDropdown,\r\n} from 'react-bootstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link, HashRouter\r\n} from \"react-router-dom\";\r\n\r\nimport Category from './Category';\r\nimport Journal from './Journal'\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">Money Journey</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#journal\">Journal</Nav.Link>\r\n            <Nav.Link href=\"#category\">Category</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n      <Switch>\r\n        <HashRouter path=\"/journal\">\r\n          <Journal />\r\n        </HashRouter>\r\n        <Route path=\"/category\">\r\n          <Category />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>Home</h1>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}